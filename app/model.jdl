application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName monetizedapi
    blueprints []
    buildTool maven
    cacheProvider no
    clientFramework react
    clientPackageManager npm
    clientTheme flatly
    clientThemeVariant dark
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableHibernateCache false
    enableSwaggerCodegen false
    enableTranslation false
    jhiPrefix jhi
    jhipsterVersion "7.1.0"
    languages [en, fr]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName com.mycompany.myapp
    prodDatabaseType mysql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType false
    skipClient false
    skipServer false
    skipUserManagement false
    testFrameworks []
    websocket false
  }

  entities *


}

enum Method{GET, POST, PUT, PATCH, DELETE }

entity Invoice{
  boltInvoice String required
  sats Long required
  settled Boolean required
  paidByPubKey String
  createdAt LocalDate required
  settledAt LocalDate
}

@readOnly
entity Balance{
  sats Long required
  updatedAt LocalDate
}

entity MonetizedApi{
  method Method required
  uri String required
  priceInSats Long required
}

entity MonetizedApiInvocation{
  uri String required
  createdAt LocalDate required
}

relationship OneToOne {
  Balance{user(login) required} to User
}

relationship ManyToOne {
  Invoice{user(login) required} to User
  MonetizedApiInvocation{user(login) required} to User
}


dto * with mapstruct

paginate * with infinite-scroll

service * with serviceClass

filter *


